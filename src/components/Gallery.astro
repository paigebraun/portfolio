---
import Popup from "./Popup.astro";
---

<div class="main-gallery max-w-3xl flex-1">
    <div class="flex justify-end mb-10">
        <input
            type="range"
            min="0"
            max="100"
            class="range w-64 h-2 accent-black bg-gray-200 rounded-lg"
        />
    </div>

    <section
        class="image__section w-full flex flex-wrap justify-center items-center gap-2">
    </section>

    <Popup />
</div>

<script is:inline>
    document.addEventListener("astro:page-load", () => {
        const minWidth = 75;
        const totalImages = 60;

        const imageSection = document.querySelector(".image__section");
        const range = document.querySelector(".range");

        if (!imageSection || !range) return;

        let currentPageWidth = imageSection.clientWidth;
        let currentValue = window.innerWidth <= 800 ? 0 : 7;

        updateProgressBar(currentValue);

        if (window.innerWidth <= 800) createImages(400, 1920);
        else createImages(400, 1920);

        function createImages(size, maxSize) {
            for (let i = 0; i < totalImages; i++) {
                const imageContainer = document.createElement("div");
                imageContainer.classList.add("image__container");

                const image = new Image();
                image.classList.add("image");

                const index = i < 10 ? "0" + i : i;
                image.src = `./assets/images-${size}/${index}.jpg`;

                imageContainer.append(image);
                imageSection.append(imageContainer);

                image.onload = () => {
                    addImageOrientation(image);
                    loadBigImages(image, index, maxSize);

                    // Add click handler for popup
                    image.addEventListener("click", () => {
                        // Gather all image srcs (full size)
                        const allImages = Array.from(
                            document.querySelectorAll(".image")
                        ).map((img) =>
                            img.src.replace(/images-\d+\//, "images-1920/")
                        );
                        const idx = allImages.indexOf(
                            image.src.replace(/images-\d+\//, "images-1920/")
                        );
                        window.dispatchEvent(
                            new CustomEvent("open-popup", {
                                detail: { images: allImages, idx },
                            })
                        );
                    });
                };
            }
        }

        function loadBigImages(image, index, maxSize) {
            setTimeout(() => {
                image.src = `./assets/images-${maxSize}/${index}.jpg`;
                image.loading = "lazy";
            }, 2000);
        }

        function addImageOrientation(image) {
            const container = image.closest(".image__container");
            if (image.naturalWidth > image.naturalHeight) {
                container.classList.add("landscape");
                container.classList.remove("portrait");
                container.dataset.orientation = "landscape";
            } else {
                container.classList.add("portrait");
                container.classList.remove("landscape");
                container.dataset.orientation = "portrait";
            }
            container.classList.add("visible");
        }

        function handlePageUpdates() {
            currentPageWidth = imageSection.clientWidth;
            updateImageWidth();
            updateProgressBar(currentValue);
        }

        function scaleImages() {
            currentValue = Number(this.value);
            updateProgressBar(currentValue);
            updateImageWidth();
        }

        function updateImageWidth() {
            const t = Math.pow(currentValue / 100, 1.5);
            const images = Array.from(
                document.querySelectorAll(".image__container")
            );
            images.forEach((img) => {
                if (currentValue === 100) {
                    img.style.width = "100%";
                } else {
                    const target = minWidth + (currentPageWidth - minWidth) * t;
                    img.style.width = Math.min(target, currentPageWidth) + "px";
                }
            });
        }

        function updateProgressBar(value) {
            range.value = value;
            range.style.background = `linear-gradient(to right, var(--black) ${value}%, var(--black) ${value}%, var(--light-grey) 0%, var(--light-grey) 100%)`;
        }

        range.addEventListener("input", scaleImages);
        window.addEventListener("resize", handlePageUpdates);
    });
</script>
