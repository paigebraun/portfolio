---
import Popup from "./Popup.astro";
---

<div class="main-gallery max-w-3xl flex-1">
    <div class="flex justify-end mb-10">
        <input
            type="range"
            min="0"
            max="100"
            class="range w-64 h-2 accent-black bg-gray-200 rounded-lg"
        />
    </div>

    <section
        class="image__section w-full flex flex-wrap justify-center items-center gap-2">
    </section>

    <Popup />
</div>

<script is:inline>
    document.addEventListener("astro:page-load", () => {
        const minWidth = 75;
        const totalImages = 60;

        const imageSection = document.querySelector(".image__section");
        const range = document.querySelector(".range");

        let currentPageWidth = imageSection.clientWidth;
        let currentValue = window.innerWidth <= 800 ? 0 : 7;

        updateProgressBar(currentValue);

        // Only use 400 for small screens, 1920 for others
        if (window.innerWidth <= 800) createImages(400, 1920);
        else createImages(400, 1920);

        let imageElements = [];
        let imageUrls = [];
        let images = [];

        // Popup elements from Popup.astro
        const popup = document.getElementById("popup");
        const popupImg = document.getElementById("popup-img");
        const closeBtn = document.getElementById("popup-close");
        const prevBtn = document.getElementById("popup-prev");
        const nextBtn = document.getElementById("popup-next");

        setTimeout(() => {
            const images = Array.from(document.querySelectorAll(".image"));
            let currentIdx = 0;

            function showPopup(idx) {
                currentIdx = idx;
                popupImg.src = images[currentIdx].src.replace(
                    /images-\d+\//,
                    "images-1920/"
                );
                popup.classList.remove("hidden");
                popup.classList.add("flex");
            }

            images.forEach((img, idx) => {
                img.addEventListener("click", () => {
                    showPopup(idx);
                });
            });

            closeBtn.addEventListener("click", () => {
                popup.classList.remove("flex");
                popup.classList.add("hidden");
                popupImg.src = "";
            });

            prevBtn.addEventListener("click", (e) => {
                e.stopPropagation();
                currentIdx = (currentIdx - 1 + images.length) % images.length;
                popupImg.src = images[currentIdx].src.replace(
                    /images-\d+\//,
                    "images-1920/"
                );
            });

            nextBtn.addEventListener("click", (e) => {
                e.stopPropagation();
                currentIdx = (currentIdx + 1) % images.length;
                popupImg.src = images[currentIdx].src.replace(
                    /images-\d+\//,
                    "images-1920/"
                );
            });

            popup.addEventListener("click", (e) => {
                if (e.target === popup) {
                    popup.classList.remove("flex");
                    popup.classList.add("hidden");
                    popupImg.src = "";
                }
            });

            window.addEventListener("keydown", (e) => {
                if (popup.classList.contains("flex")) {
                    if (e.key === "Escape") closeBtn.click();
                    if (e.key === "ArrowLeft") prevBtn.click();
                    if (e.key === "ArrowRight") nextBtn.click();
                }
            });
        }, 100);

        function createImages(size, maxSize) {
            let count = 0;

            for (let i = 0; i < totalImages; i++) {
                const imageContainer = document.createElement("div");
                imageContainer.classList.add("image__container");

                const image = new Image();
                image.classList.add("image");

                const index = i < 10 ? "0" + i : i;
                image.src = `./assets/images-${size}/${index}.jpg`;

                imageContainer.append(image);
                imageSection.append(imageContainer);

                image.onload = () => {
                    count++;
                    addImageOrientation(image);
                    loadBigImages(image, index, maxSize);

                    if (count === totalImages) {
                        imageElements = Array.from(
                            document.querySelectorAll(".image")
                        );
                        imageUrls = imageElements.map(
                            (img) => img.src.split("/").reverse()[0]
                        );
                        images = Array.from(
                            document.querySelectorAll(".image__container")
                        );

                        images.forEach((img) =>
                            img.addEventListener("click", openPopup)
                        );
                    }
                };
            }
        }

        function loadBigImages(image, index, maxSize) {
            let interval = setInterval(() => {
                setTimeout(() => {
                    image.src = `./assets/images-${maxSize}/${index}.jpg`;
                    image.loading = "lazy";
                }, 2000);
                clearInterval(interval);
            }, 500);
        }

        function addImageOrientation(image) {
            const container = image.closest(".image__container");
            if (image.naturalWidth > image.naturalHeight) {
                container.classList.add("landscape");
                container.classList.remove("portrait");
                container.dataset.orientation = "landscape";
            } else {
                container.classList.add("portrait");
                container.classList.remove("landscape");
                container.dataset.orientation = "portrait";
            }
            container.classList.add("visible");
        }

        function handlePageUpdates() {
            currentPageWidth = imageSection.clientWidth;
            updateImageWidth();
            updateProgressBar(currentValue);
        }

        function scaleImages() {
            currentValue = Number(this.value);
            updateProgressBar(currentValue);
            updateImageWidth();
        }

        function updateImageWidth() {
            const t = Math.pow(currentValue / 100, 1.5);

            images.forEach((img) => {
                if (currentValue === 100) {
                    img.style.width = "100%";
                } else {
                    // Use the same scaling for both orientations for consistency
                    const target = minWidth + (currentPageWidth - minWidth) * t;
                    img.style.width = Math.min(target, currentPageWidth) + "px";
                }
            });
        }

        function updateProgressBar(value) {
            range.value = value;
            range.style.background = `linear-gradient(to right, var(--black) ${value}%, var(--black) ${value}%, var(--light-grey) 0%, var(--light-grey) 100%)`;
        }

        function openPopup(e) {
            const src = e.target.src.split("/").reverse()[0];
            currentIndex = imageUrls.findIndex((url) => url === src);

            showImage(currentIndex);

            popup.classList.add("popup--open");
            document.body.classList.add("scroll--canceled");
            setTimeout(() => (popup.style.opacity = 1), 100);
            isPopupOpen = true;
            showArrow();
        }

        function showImage(index) {
            const file = imageUrls[index];
            const img = imageElements.find((i) => i.src.includes(file));
            let container;
            if (img) {
                container = img.closest(".image__container");
            } else {
                container = document.createElement("div");
                container.dataset.orientation = "portrait";
            }

            popupImg.src = `./assets/images-1920/${file}`;
            removeImageOrientation();
            if (container.dataset.orientation === "landscape") {
                popupImg.classList.add("popup--landscape");
            } else {
                popupImg.classList.add("popup--portrait");
            }
            updateCount(index);
        }

        function updateCount(idx) {
            imageCount.innerHTML = String(idx + 1).padStart(3, "0");
        }

        function showArrow() {
            if (window.innerWidth < 1024) return;
            popupArrow.style.left = mouseCoords.x + 20 + "px";
            popupArrow.style.top = mouseCoords.y + "px";
            popupArrow.style.opacity = 1;
        }

        range.addEventListener("input", scaleImages);
        window.addEventListener("resize", handlePageUpdates);
    });
</script>
